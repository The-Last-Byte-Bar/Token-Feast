{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[walletAddress,setWalletAddress]=useState(null);const[isConnected,setIsConnected]=useState(false);useEffect(()=>{// Check if wallet is already connected\ncheckConnection();},[]);const checkConnection=async()=>{if(typeof window.ergoConnector!=='undefined'){const isConnected=await window.ergoConnector.nautilus.connect();setIsConnected(isConnected);if(isConnected){const address=await window.ergo.get_change_address();setWalletAddress(address);}}};const connectWallet=async()=>{if(typeof window.ergoConnector!=='undefined'){try{const connected=await window.ergoConnector.nautilus.connect();setIsConnected(connected);if(connected){const address=await window.ergo.get_change_address();setWalletAddress(address);}}catch(error){console.error(\"Error connecting to Nautilus wallet:\",error);}}else{console.error(\"Nautilus wallet is not installed\");}};const disconnectWallet=async()=>{if(isConnected){await window.ergoConnector.nautilus.disconnect();setIsConnected(false);setWalletAddress(null);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Token Flight\"})}),/*#__PURE__*/_jsxs(\"main\",{children:[!isConnected?/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,children:\"Connect Nautilus Wallet\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Connected: \",walletAddress]}),/*#__PURE__*/_jsx(\"button\",{onClick:disconnectWallet,children:\"Disconnect Wallet\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Token distribution system coming soon!\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","walletAddress","setWalletAddress","isConnected","setIsConnected","checkConnection","window","ergoConnector","nautilus","connect","address","ergo","get_change_address","connectWallet","connected","error","console","disconnectWallet","disconnect","className","children","onClick"],"sources":["/home/whaleshark/Documents/ergo/Token-Flight/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    // Check if wallet is already connected\n    checkConnection();\n  }, []);\n\n  const checkConnection = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      const isConnected = await window.ergoConnector.nautilus.connect();\n      setIsConnected(isConnected);\n      if (isConnected) {\n        const address = await window.ergo.get_change_address();\n        setWalletAddress(address);\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      try {\n        const connected = await window.ergoConnector.nautilus.connect();\n        setIsConnected(connected);\n        if (connected) {\n          const address = await window.ergo.get_change_address();\n          setWalletAddress(address);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to Nautilus wallet:\", error);\n      }\n    } else {\n      console.error(\"Nautilus wallet is not installed\");\n    }\n  };\n\n  const disconnectWallet = async () => {\n    if (isConnected) {\n      await window.ergoConnector.nautilus.disconnect();\n      setIsConnected(false);\n      setWalletAddress(null);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Welcome to Token Flight</h1>\n      </header>\n      <main>\n        {!isConnected ? (\n          <button onClick={connectWallet}>Connect Nautilus Wallet</button>\n        ) : (\n          <div>\n            <p>Connected: {walletAddress}</p>\n            <button onClick={disconnectWallet}>Disconnect Wallet</button>\n          </div>\n        )}\n        <p>Token distribution system coming soon!</p>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAErDC,SAAS,CAAC,IAAM,CACd;AACAU,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,MAAO,CAAAC,MAAM,CAACC,aAAa,GAAK,WAAW,CAAE,CAC/C,KAAM,CAAAJ,WAAW,CAAG,KAAM,CAAAG,MAAM,CAACC,aAAa,CAACC,QAAQ,CAACC,OAAO,CAAC,CAAC,CACjEL,cAAc,CAACD,WAAW,CAAC,CAC3B,GAAIA,WAAW,CAAE,CACf,KAAM,CAAAO,OAAO,CAAG,KAAM,CAAAJ,MAAM,CAACK,IAAI,CAACC,kBAAkB,CAAC,CAAC,CACtDV,gBAAgB,CAACQ,OAAO,CAAC,CAC3B,CACF,CACF,CAAC,CAED,KAAM,CAAAG,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,MAAO,CAAAP,MAAM,CAACC,aAAa,GAAK,WAAW,CAAE,CAC/C,GAAI,CACF,KAAM,CAAAO,SAAS,CAAG,KAAM,CAAAR,MAAM,CAACC,aAAa,CAACC,QAAQ,CAACC,OAAO,CAAC,CAAC,CAC/DL,cAAc,CAACU,SAAS,CAAC,CACzB,GAAIA,SAAS,CAAE,CACb,KAAM,CAAAJ,OAAO,CAAG,KAAM,CAAAJ,MAAM,CAACK,IAAI,CAACC,kBAAkB,CAAC,CAAC,CACtDV,gBAAgB,CAACQ,OAAO,CAAC,CAC3B,CACF,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAC9D,CACF,CAAC,IAAM,CACLC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC,CACnD,CACF,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAId,WAAW,CAAE,CACf,KAAM,CAAAG,MAAM,CAACC,aAAa,CAACC,QAAQ,CAACU,UAAU,CAAC,CAAC,CAChDd,cAAc,CAAC,KAAK,CAAC,CACrBF,gBAAgB,CAAC,IAAI,CAAC,CACxB,CACF,CAAC,CAED,mBACEH,KAAA,QAAKoB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBvB,IAAA,WAAQsB,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC5BvB,IAAA,OAAAuB,QAAA,CAAI,yBAAuB,CAAI,CAAC,CAC1B,CAAC,cACTrB,KAAA,SAAAqB,QAAA,EACG,CAACjB,WAAW,cACXN,IAAA,WAAQwB,OAAO,CAAER,aAAc,CAAAO,QAAA,CAAC,yBAAuB,CAAQ,CAAC,cAEhErB,KAAA,QAAAqB,QAAA,eACErB,KAAA,MAAAqB,QAAA,EAAG,aAAW,CAACnB,aAAa,EAAI,CAAC,cACjCJ,IAAA,WAAQwB,OAAO,CAAEJ,gBAAiB,CAAAG,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EAC1D,CACN,cACDvB,IAAA,MAAAuB,QAAA,CAAG,wCAAsC,CAAG,CAAC,EACzC,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAApB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}