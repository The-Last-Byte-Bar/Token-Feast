{"ast":null,"code":"var _jsxFileName = \"/home/whaleshark/Documents/ergo/Token-Flight/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { ErgoProvider, SubmitTx, useErgo } from 'ergo-react-components'; // You'll need to install this package\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [proxyAddress, setProxyAddress] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [txId, setTxId] = useState(null);\n  const {\n    ergo\n  } = useErgo();\n  useEffect(() => {\n    checkConnection();\n  }, []);\n  const checkConnection = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      const isConnected = await window.ergoConnector.nautilus.connect();\n      setIsConnected(isConnected);\n      if (isConnected) {\n        const address = await window.ergo.get_change_address();\n        setWalletAddress(address);\n      }\n    }\n  };\n  const connectWallet = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      try {\n        const connected = await window.ergoConnector.nautilus.connect();\n        setIsConnected(connected);\n        if (connected) {\n          const address = await window.ergo.get_change_address();\n          setWalletAddress(address);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to Nautilus wallet:\", error);\n        setError(\"Failed to connect to wallet\");\n      }\n    } else {\n      setError(\"Nautilus wallet is not installed\");\n    }\n  };\n  const disconnectWallet = async () => {\n    if (isConnected) {\n      await window.ergoConnector.nautilus.disconnect();\n      setIsConnected(false);\n      setWalletAddress(null);\n    }\n  };\n  const mintTokensAndCreateProxy = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const height = await window.ergo.get_current_height();\n      const utxos = await window.ergo.get_utxos();\n\n      // Step 1: Get the unsigned transaction from the backend\n      const response = await fetch('http://localhost:3001/create-minting-tx', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          walletAddress,\n          height,\n          utxos\n        })\n      });\n      const {\n        unsignedTx\n      } = await response.json();\n\n      // Step 2: Sign the transaction with Nautilus\n      const signedTx = await window.ergo.sign_tx(unsignedTx);\n\n      // Step 3: Submit the signed transaction\n      const txId = await window.ergo.submit_tx(signedTx);\n      setTxId(txId);\n      setIsLoading(false);\n\n      // Note: The backend no longer returns a proxyAddress, so we're not setting it here.\n      // If you still need a proxyAddress, you'll need to implement that logic separately.\n    } catch (error) {\n      console.error(\"Error minting tokens:\", error);\n      setError(\"Failed to mint tokens and create proxy\");\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vaporwave-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"neon-text\",\n          children: \"Token Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vaporwave-box\",\n          children: [!isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vaporwave-button\",\n            onClick: connectWallet,\n            children: \"Connect Nautilus Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"connected-text\",\n              children: [\"Connected: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: walletAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vaporwave-button\",\n              onClick: disconnectWallet,\n              children: \"Disconnect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vaporwave-button\",\n              onClick: mintTokensAndCreateProxy,\n              disabled: isLoading,\n              children: isLoading ? 'Processing...' : 'Mint Tokens and Create Proxy'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), txId && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"tx-text\",\n              children: [\"Transaction ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: txId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 26\n            }, this), proxyAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"proxy-text\",\n              children: [\"Proxy Address: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: proxyAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rRuc6KGHa4R9W3oS9JBqh1U5s0g=\", false, function () {\n  return [useErgo];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ErgoProvider","SubmitTx","useErgo","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","isConnected","setIsConnected","proxyAddress","setProxyAddress","isLoading","setIsLoading","error","setError","txId","setTxId","ergo","checkConnection","window","ergoConnector","nautilus","connect","address","get_change_address","connectWallet","connected","console","disconnectWallet","disconnect","mintTokensAndCreateProxy","height","get_current_height","utxos","get_utxos","response","fetch","method","headers","body","JSON","stringify","unsignedTx","json","signedTx","sign_tx","submit_tx","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/whaleshark/Documents/ergo/Token-Flight/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { ErgoProvider, SubmitTx, useErgo } from 'ergo-react-components'; // You'll need to install this package\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [proxyAddress, setProxyAddress] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [txId, setTxId] = useState(null);\n  const { ergo } = useErgo();\n\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  const checkConnection = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      const isConnected = await window.ergoConnector.nautilus.connect();\n      setIsConnected(isConnected);\n      if (isConnected) {\n        const address = await window.ergo.get_change_address();\n        setWalletAddress(address);\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      try {\n        const connected = await window.ergoConnector.nautilus.connect();\n        setIsConnected(connected);\n        if (connected) {\n          const address = await window.ergo.get_change_address();\n          setWalletAddress(address);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to Nautilus wallet:\", error);\n        setError(\"Failed to connect to wallet\");\n      }\n    } else {\n      setError(\"Nautilus wallet is not installed\");\n    }\n  };\n\n  const disconnectWallet = async () => {\n    if (isConnected) {\n      await window.ergoConnector.nautilus.disconnect();\n      setIsConnected(false);\n      setWalletAddress(null);\n    }\n  };\n\n  const mintTokensAndCreateProxy = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const height = await window.ergo.get_current_height();\n      const utxos = await window.ergo.get_utxos();\n\n      // Step 1: Get the unsigned transaction from the backend\n      const response = await fetch('http://localhost:3001/create-minting-tx', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ walletAddress, height, utxos }),\n      });\n      const { unsignedTx } = await response.json();\n\n      // Step 2: Sign the transaction with Nautilus\n      const signedTx = await window.ergo.sign_tx(unsignedTx);\n\n      // Step 3: Submit the signed transaction\n      const txId = await window.ergo.submit_tx(signedTx);\n\n      setTxId(txId);\n      setIsLoading(false);\n\n      // Note: The backend no longer returns a proxyAddress, so we're not setting it here.\n      // If you still need a proxyAddress, you'll need to implement that logic separately.\n    } catch (error) {\n      console.error(\"Error minting tokens:\", error);\n      setError(\"Failed to mint tokens and create proxy\");\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"vaporwave-background\"></div>\n      <div className=\"content\">\n        <header className=\"App-header\">\n          <h1 className=\"neon-text\">Token Flight</h1>\n        </header>\n        <main>\n          <div className=\"vaporwave-box\">\n            {!isConnected ? (\n              <button className=\"vaporwave-button\" onClick={connectWallet}>Connect Nautilus Wallet</button>\n            ) : (\n              <div className=\"wallet-info\">\n                <p className=\"connected-text\">Connected: <span className=\"address\">{walletAddress}</span></p>\n                <button className=\"vaporwave-button\" onClick={disconnectWallet}>Disconnect Wallet</button>\n                <button className=\"vaporwave-button\" onClick={mintTokensAndCreateProxy} disabled={isLoading}>\n                  {isLoading ? 'Processing...' : 'Mint Tokens and Create Proxy'}\n                </button>\n                {txId && <p className=\"tx-text\">Transaction ID: <span className=\"address\">{txId}</span></p>}\n                {proxyAddress && <p className=\"proxy-text\">Proxy Address: <span className=\"address\">{proxyAddress}</span></p>}\n              </div>\n            )}\n            {error && <p className=\"error-text\">{error}</p>}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}