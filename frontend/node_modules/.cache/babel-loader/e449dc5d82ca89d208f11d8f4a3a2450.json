{"ast":null,"code":"var _jsxFileName = \"/home/whaleshark/Documents/ergo/Token-Flight/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [proxyAddress, setProxyAddress] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    checkConnection();\n  }, []);\n  const checkConnection = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      const isConnected = await window.ergoConnector.nautilus.connect();\n      setIsConnected(isConnected);\n      if (isConnected) {\n        const address = await window.ergo.get_change_address();\n        setWalletAddress(address);\n      }\n    }\n  };\n  const connectWallet = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      try {\n        const connected = await window.ergoConnector.nautilus.connect();\n        setIsConnected(connected);\n        if (connected) {\n          const address = await window.ergo.get_change_address();\n          setWalletAddress(address);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to Nautilus wallet:\", error);\n        setError(\"Failed to connect to wallet\");\n      }\n    } else {\n      setError(\"Nautilus wallet is not installed\");\n    }\n  };\n  const disconnectWallet = async () => {\n    if (isConnected) {\n      await window.ergoConnector.nautilus.disconnect();\n      setIsConnected(false);\n      setWalletAddress(null);\n    }\n  };\n  const mintTokensAndCreateProxy = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Step 1: Get the unsigned transaction from the backend\n      const response = await fetch('http://localhost:3001/mint-tokens', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          walletAddress\n        })\n      });\n      const {\n        unsignedTx\n      } = await response.json();\n\n      // Step 2: Sign the transaction with Nautilus\n      const signedTx = await ergo.sign_tx(unsignedTx);\n\n      // Step 3: Submit the signed transaction to the backend\n      const submitResponse = await fetch('http://localhost:3001/submit-tx', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          signedTx\n        })\n      });\n      const {\n        proxyAddress\n      } = await submitResponse.json();\n      setProxyAddress(proxyAddress);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error minting tokens:\", error);\n      setError(\"Failed to mint tokens and create proxy\");\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vaporwave-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"neon-text\",\n          children: \"Token Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vaporwave-box\",\n          children: [!isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vaporwave-button\",\n            onClick: connectWallet,\n            children: \"Connect Nautilus Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"connected-text\",\n              children: [\"Connected: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: walletAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vaporwave-button\",\n              onClick: disconnectWallet,\n              children: \"Disconnect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vaporwave-button\",\n              onClick: mintTokensAndCreateProxy,\n              disabled: isLoading,\n              children: isLoading ? 'Processing...' : 'Mint Tokens and Create Proxy'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), proxyAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"proxy-text\",\n              children: [\"Proxy Address: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: proxyAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tV8XMbjCnYprLkEtc5/Rylol5uM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","isConnected","setIsConnected","proxyAddress","setProxyAddress","isLoading","setIsLoading","error","setError","checkConnection","window","ergoConnector","nautilus","connect","address","ergo","get_change_address","connectWallet","connected","console","disconnectWallet","disconnect","mintTokensAndCreateProxy","response","fetch","method","headers","body","JSON","stringify","unsignedTx","json","signedTx","sign_tx","submitResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/whaleshark/Documents/ergo/Token-Flight/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [proxyAddress, setProxyAddress] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  const checkConnection = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      const isConnected = await window.ergoConnector.nautilus.connect();\n      setIsConnected(isConnected);\n      if (isConnected) {\n        const address = await window.ergo.get_change_address();\n        setWalletAddress(address);\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (typeof window.ergoConnector !== 'undefined') {\n      try {\n        const connected = await window.ergoConnector.nautilus.connect();\n        setIsConnected(connected);\n        if (connected) {\n          const address = await window.ergo.get_change_address();\n          setWalletAddress(address);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to Nautilus wallet:\", error);\n        setError(\"Failed to connect to wallet\");\n      }\n    } else {\n      setError(\"Nautilus wallet is not installed\");\n    }\n  };\n\n  const disconnectWallet = async () => {\n    if (isConnected) {\n      await window.ergoConnector.nautilus.disconnect();\n      setIsConnected(false);\n      setWalletAddress(null);\n    }\n  };\n\n  const mintTokensAndCreateProxy = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Step 1: Get the unsigned transaction from the backend\n      const response = await fetch('http://localhost:3001/mint-tokens', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ walletAddress }),\n      });\n      const { unsignedTx } = await response.json();\n\n      // Step 2: Sign the transaction with Nautilus\n      const signedTx = await ergo.sign_tx(unsignedTx);\n\n      // Step 3: Submit the signed transaction to the backend\n      const submitResponse = await fetch('http://localhost:3001/submit-tx', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ signedTx }),\n      });\n      const { proxyAddress } = await submitResponse.json();\n\n      setProxyAddress(proxyAddress);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error minting tokens:\", error);\n      setError(\"Failed to mint tokens and create proxy\");\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"vaporwave-background\"></div>\n      <div className=\"content\">\n        <header className=\"App-header\">\n          <h1 className=\"neon-text\">Token Flight</h1>\n        </header>\n        <main>\n          <div className=\"vaporwave-box\">\n            {!isConnected ? (\n              <button className=\"vaporwave-button\" onClick={connectWallet}>Connect Nautilus Wallet</button>\n            ) : (\n              <div className=\"wallet-info\">\n                <p className=\"connected-text\">Connected: <span className=\"address\">{walletAddress}</span></p>\n                <button className=\"vaporwave-button\" onClick={disconnectWallet}>Disconnect Wallet</button>\n                <button className=\"vaporwave-button\" onClick={mintTokensAndCreateProxy} disabled={isLoading}>\n                  {isLoading ? 'Processing...' : 'Mint Tokens and Create Proxy'}\n                </button>\n                {proxyAddress && <p className=\"proxy-text\">Proxy Address: <span className=\"address\">{proxyAddress}</span></p>}\n              </div>\n            )}\n            {error && <p className=\"error-text\">{error}</p>}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}